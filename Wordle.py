import random

def main():
    print("Welcome to the game of Absurdle.")

    dict_name = input("What dictionary would you like to use? ")

    word_length = int(input("What length word would you like to guess? "))

    contents = load_file(dict_name)
    words = prune_dictionary(contents, word_length)
    DEBUG = False

    if DEBUG:
        print("words: ", words)

    guessed_patterns = []
    while not is_finished(guessed_patterns):
        guess = input("> ")
        pattern = record(guess, words, word_length)
        guessed_patterns.append(pattern)
        print(": ", pattern)
        print()
    print("Absurdle ", len(guessed_patterns), "/∞")
    print()
    print_patterns(guessed_patterns)

def print_patterns(patterns: list):
    for s in patterns:
        print(s)

def is_finished(patterns: list):
    if not patterns:  # haven't guessed anything yet, so game isn't finished!
        return False
    last_pattern = patterns[-1]  # get the pattern generated by the most recent guess
    return '⬜' not in last_pattern and '🟨' not in last_pattern  # must be all green to "win"

def load_file(dict_file):
    contents = dict_file.readlines()
    return contents

def prune_dictionary(contents: list, word_length: int):
    if word_length < 1:
        raise ValueError("word length must be greater than 0")
    words_dic = set()
    for dict_word in contents:
        if len(dict_word) == word_length:
            words_dic.add(dict_word)
    return words_dic

def record(guess: str, words: set, word_length: int):
    if not words or word_length != len(guess):
        raise ValueError("words set is empty or word length is different from the actual word length")
    match = {}
    for word in words:
        pattern = pattern_for(word, guess)
        if pattern not in match:
            target_set = set()
            match[pattern] = target_set
        match[pattern].add(word)
    result = get_pattern(match)
    target = match[result]
    words.clear()
    for element in target:
        words.add(element)
    return result

def get_pattern(match: dict):
    max_num = 0
    pattern = ""
    for map_pattern in match.keys():
        if len(match[map_pattern]) > max_num:
            max_num = len(match[map_pattern])
            pattern = map_pattern
    return pattern

def pattern_for(word, guess):
    length = len(word)
    letter_word = [''] * length
    letter_guess = [''] * length
    for i in range(length):
        if word[i] == guess[i]:
            word = word[:i] + "!" + word[i+1:]
            guess = guess[:i] + "!" + guess[i+1:]
    for i in range(length):
        if guess[i] in word and guess[i].isalpha():
            word = word.replace(guess[i], "*", 1)
            guess = guess.replace(guess[i], "*", 1)
    for i in range(length):
        if guess[i] not in word and guess[i].isalpha():
            word = word[:i] + "%" + word[i+1:]
            guess = guess[:i] + "%" + guess[i+1:]

    guess = guess.replace("!", "🟩")
    guess = guess.replace("*", "🟨")
    guess = guess.replace("%", "⬜")

    return guess

